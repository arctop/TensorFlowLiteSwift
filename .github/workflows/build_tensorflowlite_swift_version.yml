name: Build Specific TensorFlowLiteSwift Version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to build'
        required: true
      
permissions:
  contents: write
  
jobs:
  clone_and_build:
    name: Clone TensorFlowLiteC / TensorFlowLiteSwift
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Check if Tag Exists and Build
        id: check-tag
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          tag: ${{ github.event.inputs.release_version }}
          
      - name: Create Release Branch
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          git checkout -b release-${{ github.event.inputs.release_version }}
          
      - name: Clone TensorFlow Repository
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          repository: 'tensorflow/tensorflow'
          path: '${{ github.workspace }}/tensorflow'
          fetch-tags: true
          ref: 'v${{ github.event.inputs.release_version }}'
          
      - name: Clone TensorFlowLiteC Repository
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          repository: 'arctop/TensorFlowLiteC'
          path: '${{ github.workspace }}/tensorflowlitec'
          fetch-tags: true
          ref: '${{ github.event.inputs.release_version }}'
          
      - name: Copy TensorFlowLiteSwift Files
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          find ${{ github.workspace }}/tensorflow/tensorflow/lite/swift/Sources -type f ! -name 'MetalDelegate.swift' -exec cp -v {} ${{ github.workspace }}/Sources/TensorFlowLiteSwift \;
          git add Sources/*
          git commit -m "Add TensorFlowLiteSwift Files"
          
      - name: Update Package.swift
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          cp -f Package.swift.in Package.swift
          TENSOR_FLOW_LITE_C_PACKAGE=${{ github.workspace }}/tensorflowlitec/Package.swift
          TENSOR_FLOW_LITE_C_API_URL=$(grep -A 2 -e 'name: "TensorFlowLiteC"' $TENSOR_FLOW_LITE_C_PACKAGE | grep url | sed 's/ *url: "\(.*\)",/\1/')
          TENSOR_FLOW_LITE_C_CHECKSUM=$(grep -A 2 -e 'name: "TensorFlowLiteC"' $TENSOR_FLOW_LITE_C_PACKAGE | grep checksum | sed 's/ *checksum: "\(.*\)"/\1/')
          TENSOR_FLOW_LITE_C_CORE_ML_API_URL=$(grep -A 2 -e 'name: "TensorFlowLiteCCoreML"' $TENSOR_FLOW_LITE_C_PACKAGE | grep url | sed 's/ *url: "\(.*\)",/\1/')
          TENSOR_FLOW_LITE_C_CORE_ML_CHECKSUM=$(grep -A 2 -e 'name: "TensorFlowLiteCCoreML"' $TENSOR_FLOW_LITE_C_PACKAGE | grep checksum | sed 's/ *checksum: "\(.*\)"/\1/')
          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_API_URL}}|$TENSOR_FLOW_LITE_C_API_URL|g" Package.swift
          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CHECKSUM}}|$TENSOR_FLOW_LITE_C_CHECKSUM|g" Package.swift
          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CORE_ML_API_URL}}|$TENSOR_FLOW_LITE_C_CORE_ML_API_URL|g" Package.swift
          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CORE_ML_CHECKSUM}}|$TENSOR_FLOW_LITE_C_CORE_ML_CHECKSUM|g" Package.swift
          git add Package.swift
          git commit -m "Update Package.swift"
          
      - name: Push code changes
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          git push -u origin release-${{ github.event.inputs.release_version }}
          
      - name: Upload Release
        if: steps.check-tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: 'release-${{ github.event.inputs.release_version }}'
          tag_name: ${{ github.event.inputs.release_version }}
          make_latest: 'false'

